---

- name: Set administrator environment
  hosts: admin
  tasks:
    - name: Set .kube directory
      file:
        path: "/home/{{ ansible_user }}/.kube"
        state: directory


- name: Set up Deployment Environmet
  hosts: k8snodes
  become: true
  vars_files:
    - k8s_vars.yaml

  tasks:

    - name: Disable swap
      command: swapoff -a

    - name: Modify /etc/fstab file
      command: sed -i.bak '/swap/s/^\//#\//' /etc/fstab

    - name: Install required packages
      apt:
        name: "{{ admin_pkges }}"
        state: latest
        update_cache: true

    - name: Check if Docker and Kubernetes GPG keys already exists
      stat:
        path: "/etc/apt/keyrings/{{ item }}-apt-keyring.gpg"
      register: gpg_check
      loop:
        - kubernetes
        - docker

    - name: debug
      debug:
        msg: "{{ item.item }} {{ item.stat.exists }}"
      loop: "{{ gpg_check.results }}"


    - name: Download the public signing key for the Kubernetes package repositories
      shell: "curl -fsSL https://pkgs.k8s.io/core:/stable:/v1.31/deb/Release.key | sudo gpg --dearmor -o /etc/apt/keyrings/{{ item.item }}-apt-keyring.gpg"
      when:
        - item.item == "kubernetes"
        - item.stat.exists == false
      loop: "{{ gpg_check.results }}"


    - name: Download the public signing key for the Docker package repositories
      shell: "curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /etc/apt/keyrings/{{ item.item }}-apt-keyring.gpg"
      when:
        - item.item == "docker"
        - item.stat.exists == false
      loop: "{{ gpg_check.results }}"

    - name: Check if Kubernetes and Docker repositories exists
      stat:
        path: "/etc/apt/sources.list.d/{{ item }}.list"
      register: repo_check
      loop:
        - kubernetes
        - docker

    - name: Add Kubernetes Repository
      lineinfile:
        path: "/etc/apt/sources.list.d/kubernetes.list"
        line: "{{ kube_repo_content }}"
        create: true
      when:
        - item.item == "kubernetes"
        - item.stat.exists == false
      loop: "{{ repo_check.results }}"

    - name: Add Docker Repository
      shell: "echo {{ docker_repo_content }} > /etc/apt/sources.list.d/docker.list"
      when:
        - item.item == "docker"
        - item.stat.exists == false
      loop: "{{ repo_check.results }}"    

    - name: Install Kubernetes and Docker packages
      apt:
        name: "{{ pkges }}"
        state: latest
        update_cache: true

    - name: Generate default containerd config file
      shell: containerd config default > /etc/containerd/config.toml

    - name: Set systemd as cgroup driver
      lineinfile:
        path: "/etc/containerd/config.toml"
        regex: "SystemdCgroup = false"
        line: "            SystemdCgroup = true"

    - name: Enable services
      systemd_service:
        name: "{{ item }}"
        enabled: true
        state: restarted
      loop: "{{ services }}"
